name: Build, push, and deploy

on:
  push:
    branches:
      - master
env:
  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  ORACLE_IMAGE: docker.pkg.github.com/navikt/vtp/foreldrepenger-oracle
  CLUSTER: dev-fss
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/fplos

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - run:  git fetch --prune --unshallow

      - name: Cache maven repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Sette opp Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Hent tag
        run: echo "::set-env name=TAG::$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Hent og start Oracle image
        id: oracle
        shell: bash
        run: |
          echo  $GITHUB_TOKEN | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          echo "Henter og starter Oracle image $ORACLE_IMAGE"
          docker-compose -f oracle/docker-compose.yml pull
          rm -f nohup.out
          docker-compose -f oracle/docker-compose.yml up oracle >nohup.out 2>&1 &
          sh -c 'tail -n +0 -f nohup.out | { sed "/Disconnected/q" && kill $$; }' || true

      - name: Kompiler
        run: |
          echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"
          mvn jacoco:prepare-agent install -e --quiet --batch-mode --settings .github/workflows/.m2/settings.xml   -Djacoco.destFile=$(pwd)/target/jacoco.exec
#          mvn jacoco:report sonar:sonar -e --batch-mode --settings .github/workflows/.m2/settings.xml -Djacoco.dataFile=$(pwd)/target/jacoco.exec  -Dsonar.login=${SONAR} -Dsonar.projectKey=navikt_fplos
        env:
          TZ: Europe/Oslo
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}


      - name: Bygg, tag og push Docker image  
        run: |
          docker build  --tag $IMAGE .
          echo  $GITHUB_TOKEN | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker push $IMAGE_BASE  
          
      - name: Lukk gamle bygg-issues
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['bygg']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });     
      
      - name: Opprett issue, trigg deploy til dev-fss
        if: success()
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.NOTIFICATION}}
          script: |
              github.issues.create( {
                owner: context.issue.owner,
                repo: context.issue.repo,
                labels: ['bygg'],
                title: 'Deploy av ${{ env.TAG }}'})
              .then(response => {
                      const issue = { owner: context.issue.owner,
                      repo: context.issue.repo,
                      issue_number: response.data.number }
                     github.issues.createComment({...issue,
                            title: 'Deploy av ${{ env.TAG }}',
                            body: '/promote dev-fss '})
               });