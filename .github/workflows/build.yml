name: Build, push, and deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
env:
  IMAGE_BASE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - run:  git fetch --prune --unshallow

      - name: Henter maven avhengigheter som er cachet
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 16

      - name: Sette opp Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@31f1bb4610792058145ecedb9770b0145e118a96 # Use commit-sha1 instead of tag for security concerns
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Hent og start Oracle image
        id: oracle
        shell: bash
        run: |
          echo "Henter og starter Oracle image"
          cd .oracle
          docker-compose up --quiet-pull > nohup.out 2>&1 &
          sh -c 'tail -n +0 -f nohup.out | { sed "/Disconnected/q" && kill $$; }' || true

      - name: Set build version
        run: |
          echo "BUILD_VERSION=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Kompiler
        run: |
          mvn jacoco:prepare-agent install -e --quiet --batch-mode --settings .github/workflows/.m2/settings.xml -Dchangelist= -Dsha1=-${BUILD_VERSION} -Djacoco.destFile=$(pwd)/target/jacoco.exec
          echo "TAG=$(mvn help:evaluate --batch-mode --settings .github/workflows/.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        env:
          TZ: Europe/Oslo
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Bygg, tag og push Docker image
        run: |
          docker build --pull --tag ${IMAGE_BASE}:${TAG} --tag ${IMAGE_BASE}:latest .
          docker push ${IMAGE_BASE} --all-tags

      - name: Lukk gamle bygg-issues
        if: success()
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['bygg']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      - name: Opprett issue, trigg deploy til dev-fss
        if: success()
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
              github.issues.create( {
                owner: context.issue.owner,
                repo: context.issue.repo,
                labels: ['bygg'],
                title: 'Deploy av ${{ env.TAG }}'})
              .then(response => {
                      const issue = { owner: context.issue.owner,
                      repo: context.issue.repo,
                      issue_number: response.data.number }
                     github.issues.createComment({...issue,
                            title: 'Deploy av ${{ env.TAG }}',
                            body: '/promote dev-fss'})
               });
